{
  "info": {
    "name": "08 - Logout Testing",
    "description": "Professional logout system testing with token blacklist"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api"
    },
    {
      "key": "testToken",
      "value": ""
    },
    {
      "key": "adminToken",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Setup",
      "item": [
        {
          "name": "Login Test User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('testToken', jsonData.token);",
                  "    console.log('✅ Test user logged in');",
                  "} else {",
                  "    console.log('❌ Login failed:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"hr@company.com\",\n  \"password\": \"hr123\"\n}"
            },
            "url": "{{baseUrl}}/login"
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('adminToken', jsonData.token);",
                  "    console.log('✅ Admin logged in');",
                  "} else {",
                  "    console.log('❌ Admin login failed:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": "{{baseUrl}}/login"
          }
        }
      ]
    },
    {
      "name": "Logout Tests",
      "item": [
        {
          "name": "Test Access Before Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ Token valid - Can access profile');",
                  "} else {",
                  "    console.log('❌ Token invalid before logout:', pm.response.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{testToken}}"}
            ],
            "url": "{{baseUrl}}/profile"
          }
        },
        {
          "name": "Logout User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('✅ Logout successful');",
                  "    console.log('Response:', JSON.stringify(jsonData, null, 2));",
                  "} else {",
                  "    console.log('❌ Logout failed:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer {{testToken}}"}
            ],
            "url": "{{baseUrl}}/logout"
          }
        },
        {
          "name": "Test Access After Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 401) {",
                  "    console.log('✅ Token properly blacklisted - Access denied');",
                  "    console.log('Error:', pm.response.json().error);",
                  "} else {",
                  "    console.log('❌ Token still valid after logout:', pm.response.code);",
                  "    console.log('Response:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{testToken}}"}
            ],
            "url": "{{baseUrl}}/profile"
          }
        },
        {
          "name": "Try Logout Again (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 401) {",
                  "    console.log('✅ Cannot logout with blacklisted token');",
                  "} else {",
                  "    console.log('❌ Blacklisted token still works:', pm.response.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer {{testToken}}"}
            ],
            "url": "{{baseUrl}}/logout"
          }
        }
      ]
    },
    {
      "name": "Logout All Tests",
      "item": [
        {
          "name": "Logout All Devices",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ Logout all devices successful');",
                  "} else {",
                  "    console.log('❌ Logout all failed:', pm.response.text());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer {{adminToken}}"}
            ],
            "url": "{{baseUrl}}/logout-all"
          }
        },
        {
          "name": "Test Admin Access After Logout All",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 401) {",
                  "    console.log('✅ Admin token invalidated after logout-all');",
                  "} else {",
                  "    console.log('❌ Admin token still valid:', pm.response.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{adminToken}}"}
            ],
            "url": "{{baseUrl}}/profile"
          }
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Logout Without Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 400) {",
                  "    console.log('✅ Properly rejects logout without token');",
                  "} else {",
                  "    console.log('❌ Should reject logout without token:', pm.response.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{baseUrl}}/logout"
          }
        },
        {
          "name": "Logout With Invalid Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 401) {",
                  "    console.log('✅ Properly rejects invalid token');",
                  "} else {",
                  "    console.log('❌ Should reject invalid token:', pm.response.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer invalid.token.here"}
            ],
            "url": "{{baseUrl}}/logout"
          }
        }
      ]
    }
  ]
}